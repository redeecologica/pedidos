include('/var/www/html/wp2/wp-load.php');
//var_dump($_COOKIE);

global $current_user;
$current_user = wp_get_current_user();
var_dump($current_user->ID);
var_dump($current_user->display_name);




// Include the wp-load'
include('YOUR_WP_PATH/wp-load.php');
if ( is_user_logged_in() ) {
global $current_user;
get_currentuserinfo(); // to get currently logged in user data
echo 'Username: ' . $current_user->user_login . "\n";
echo 'User email: ' . $current_user->user_email . "\n";
}else{
   echo "User not logged in";
}




The code below returns an empty array when I am logged in.

define( 'WP_USE_THEMES', false );   
require_once $_SERVER['DOCUMENT_ROOT'] . 'blog/wp-load.php'; 
if ( !function_exists( 'is_user_logged_in' ) ) { 
    require_once    $_SERVER['DOCUMENT_ROOT'] . 'blog/wp-includes/pluggable.php'; 
} 

    $current_user = wp_get_current_user();
if ( 0 == $current_user->ID ) {
    // Not logged in.
} else {
    // Logged in.
    echo 'logged in';
}       

echo 'Username: ' . $current_user->user_login . '<br />';
    echo 'User email: ' . $current_user->user_email . '<br />';
    echo 'User first name: ' . $current_user->user_firstname . '<br />';
    echo 'User last name: ' . $current_user->user_lastname . '<br />';
    echo 'User display name: ' . $current_user->display_name . '<br />';
    echo 'User ID: ' . $current_user->ID . '<br />';






Following script works fine.

include('/var/www/html/wp2/wp-load.php');
//var_dump($_COOKIE);

global $current_user;
$current_user = wp_get_current_user();
var_dump($current_user->ID);
var_dump($current_user->display_name);
you should put the script on your WordPress root folder, then only WordPress can access the $_COOKIE and let you log in